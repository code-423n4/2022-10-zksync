/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PriorityQueueTest } from "./PriorityQueueTest";

export class PriorityQueueTestFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<PriorityQueueTest> {
    return super.deploy(overrides || {}) as Promise<PriorityQueueTest>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PriorityQueueTest {
    return super.attach(address) as PriorityQueueTest;
  }
  connect(signer: Signer): PriorityQueueTestFactory {
    return super.connect(signer) as PriorityQueueTestFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriorityQueueTest {
    return new Contract(address, _abi, signerOrProvider) as PriorityQueueTest;
  }
}

const _abi = [
  {
    inputs: [],
    name: "front",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "canonicalTxHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "expirationBlock",
            type: "uint64",
          },
          {
            internalType: "uint192",
            name: "layer2Tip",
            type: "uint192",
          },
        ],
        internalType: "struct PriorityOperation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFirstUnprocessedPriorityTx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalPriorityTxs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isEmpty",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "popFront",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "canonicalTxHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "expirationBlock",
            type: "uint64",
          },
          {
            internalType: "uint192",
            name: "layer2Tip",
            type: "uint192",
          },
        ],
        internalType: "struct PriorityOperation",
        name: "operation",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "canonicalTxHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "expirationBlock",
            type: "uint64",
          },
          {
            internalType: "uint192",
            name: "layer2Tip",
            type: "uint192",
          },
        ],
        internalType: "struct PriorityOperation",
        name: "_operation",
        type: "tuple",
      },
    ],
    name: "pushBack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061047d806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806384d9fedd1161005b57806384d9fedd146100c3578063a1954fc514610100578063ba75bbd814610108578063de8fa4311461011057600080fd5b8063681fe70c1461008257806375fe6a991461009c57806379823c9a146100b1575b600080fd5b600254600154604051911481526020015b60405180910390f35b6100af6100aa36600461037e565b61011d565b005b6002545b604051908152602001610093565b6100cb61012b565b604080518251815260208084015167ffffffffffffffff1690820152918101516001600160c01b031690820152606001610093565b6001546100b5565b6100cb610152565b6100b5610179565b905090565b610128600082610185565b50565b604080516060810182526000808252602082018190529181019190915261011860006101e3565b604080516060810182526000808252602082018190529181019190915261011860006102b8565b60006101186000610362565b600180830154600081815260208581526040918290208551815590850151918501516001600160c01b0316600160401b0267ffffffffffffffff9092169190911790830155906101d6908290610421565b8360010181905550505050565b604080516060810182526000808252602082018190529181019190915260028201546001830154036102405760405162461bcd60e51b81526020600482015260016024820152607360f81b60448201526064015b60405180910390fd5b5060028101546000818152602083815260408083208151606081018352815481526001808301805467ffffffffffffffff811684880152600160401b90046001600160c01b03169483019490945286865293879052908490559290559091906102aa908290610421565b836002018190555050919050565b604080516060810182526000808252602082018190529181019190915260028201546001830154036103105760405162461bcd60e51b81526020600482015260016024820152601160fa1b6044820152606401610237565b5060028101546000908152602091825260409081902081516060810183528154815260019091015467ffffffffffffffff811693820193909352600160401b9092046001600160c01b03169082015290565b6000816002015482600101546103789190610434565b92915050565b60006060828403121561039057600080fd5b6040516060810167ffffffffffffffff82821081831117156103c257634e487b7160e01b600052604160045260246000fd5b81604052843583526020850135915080821682146103df57600080fd5b50602082015260408301356001600160c01b03811681146103ff57600080fd5b60408201529392505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103785761037861040b565b818103818111156103785761037861040b56fea2646970667358221220224d1022b8e848c02cae05cf80e73728df745281ac4553df3f18be4aece1396f64736f6c63430008110033";
