/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { IGovernance } from "./IGovernance";

export class IGovernanceFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IGovernance {
    return new Contract(address, _abi, signerOrProvider) as IGovernance;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "isPorterAvailable",
        type: "bool",
      },
    ],
    name: "IsPorterAvailableStatusUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldGovernor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGovernor",
        type: "address",
      },
    ],
    name: "NewGovernor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousBytecodeHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newBytecodeHash",
        type: "bytes32",
      },
    ],
    name: "NewL2BootloaderBytecodeHash",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousBytecodeHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newBytecodeHash",
        type: "bytes32",
      },
    ],
    name: "NewL2DefaultAccountBytecodeHash",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldPendingGovernor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newPendingGovernor",
        type: "address",
      },
    ],
    name: "NewPendingGovernor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldVerifier",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newVerifier",
        type: "address",
      },
    ],
    name: "NewVerifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "recursionNodeLevelVkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "recursionLeafLevelVkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "recursionCircuitsSetVksHash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct VerifierParams",
        name: "oldVerifierParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "recursionNodeLevelVkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "recursionLeafLevelVkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "recursionCircuitsSetVksHash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct VerifierParams",
        name: "newVerifierParams",
        type: "tuple",
      },
    ],
    name: "NewVerifierParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validatorAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "ValidatorStatusUpdate",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_l2BootloaderBytecodeHash",
        type: "bytes32",
      },
    ],
    name: "setL2BootloaderBytecodeHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_l2DefaultAccountBytecodeHash",
        type: "bytes32",
      },
    ],
    name: "setL2DefaultAccountBytecodeHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newPendingGovernor",
        type: "address",
      },
    ],
    name: "setPendingGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isPorterAvailable",
        type: "bool",
      },
    ],
    name: "setPorterAvailability",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_active",
        type: "bool",
      },
    ],
    name: "setValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Verifier",
        name: "_newVerifier",
        type: "address",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "recursionNodeLevelVkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "recursionLeafLevelVkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "recursionCircuitsSetVksHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VerifierParams",
        name: "_newVerifierParams",
        type: "tuple",
      },
    ],
    name: "setVerifierParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];
