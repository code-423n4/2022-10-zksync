/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface DiamondInitInterface extends ethers.utils.Interface {
  functions: {
    "initialize(address,address,address,bytes32,uint64,bytes32,address,tuple,bool,bytes32,bytes32)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "initialize",
    values: [
      string,
      string,
      string,
      BytesLike,
      BigNumberish,
      BytesLike,
      string,
      {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      boolean,
      BytesLike,
      BytesLike
    ]
  ): string;

  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;

  events: {};
}

export class DiamondInit extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: DiamondInitInterface;

  functions: {
    initialize(
      _verifier: string,
      _governor: string,
      _validator: string,
      _genesisBlockHash: BytesLike,
      _genesisIndexRepeatedStorageChanges: BigNumberish,
      _genesisBlockCommitment: BytesLike,
      _allowList: string,
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      _zkPorterIsAvailable: boolean,
      _l2BootloaderBytecodeHash: BytesLike,
      _l2DefaultAccountBytecodeHash: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(address,address,address,bytes32,uint64,bytes32,address,(bytes32,bytes32,bytes32),bool,bytes32,bytes32)"(
      _verifier: string,
      _governor: string,
      _validator: string,
      _genesisBlockHash: BytesLike,
      _genesisIndexRepeatedStorageChanges: BigNumberish,
      _genesisBlockCommitment: BytesLike,
      _allowList: string,
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      _zkPorterIsAvailable: boolean,
      _l2BootloaderBytecodeHash: BytesLike,
      _l2DefaultAccountBytecodeHash: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  initialize(
    _verifier: string,
    _governor: string,
    _validator: string,
    _genesisBlockHash: BytesLike,
    _genesisIndexRepeatedStorageChanges: BigNumberish,
    _genesisBlockCommitment: BytesLike,
    _allowList: string,
    _verifierParams: {
      recursionNodeLevelVkHash: BytesLike;
      recursionLeafLevelVkHash: BytesLike;
      recursionCircuitsSetVksHash: BytesLike;
    },
    _zkPorterIsAvailable: boolean,
    _l2BootloaderBytecodeHash: BytesLike,
    _l2DefaultAccountBytecodeHash: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(address,address,address,bytes32,uint64,bytes32,address,(bytes32,bytes32,bytes32),bool,bytes32,bytes32)"(
    _verifier: string,
    _governor: string,
    _validator: string,
    _genesisBlockHash: BytesLike,
    _genesisIndexRepeatedStorageChanges: BigNumberish,
    _genesisBlockCommitment: BytesLike,
    _allowList: string,
    _verifierParams: {
      recursionNodeLevelVkHash: BytesLike;
      recursionLeafLevelVkHash: BytesLike;
      recursionCircuitsSetVksHash: BytesLike;
    },
    _zkPorterIsAvailable: boolean,
    _l2BootloaderBytecodeHash: BytesLike,
    _l2DefaultAccountBytecodeHash: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    initialize(
      _verifier: string,
      _governor: string,
      _validator: string,
      _genesisBlockHash: BytesLike,
      _genesisIndexRepeatedStorageChanges: BigNumberish,
      _genesisBlockCommitment: BytesLike,
      _allowList: string,
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      _zkPorterIsAvailable: boolean,
      _l2BootloaderBytecodeHash: BytesLike,
      _l2DefaultAccountBytecodeHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "initialize(address,address,address,bytes32,uint64,bytes32,address,(bytes32,bytes32,bytes32),bool,bytes32,bytes32)"(
      _verifier: string,
      _governor: string,
      _validator: string,
      _genesisBlockHash: BytesLike,
      _genesisIndexRepeatedStorageChanges: BigNumberish,
      _genesisBlockCommitment: BytesLike,
      _allowList: string,
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      _zkPorterIsAvailable: boolean,
      _l2BootloaderBytecodeHash: BytesLike,
      _l2DefaultAccountBytecodeHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    initialize(
      _verifier: string,
      _governor: string,
      _validator: string,
      _genesisBlockHash: BytesLike,
      _genesisIndexRepeatedStorageChanges: BigNumberish,
      _genesisBlockCommitment: BytesLike,
      _allowList: string,
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      _zkPorterIsAvailable: boolean,
      _l2BootloaderBytecodeHash: BytesLike,
      _l2DefaultAccountBytecodeHash: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(address,address,address,bytes32,uint64,bytes32,address,(bytes32,bytes32,bytes32),bool,bytes32,bytes32)"(
      _verifier: string,
      _governor: string,
      _validator: string,
      _genesisBlockHash: BytesLike,
      _genesisIndexRepeatedStorageChanges: BigNumberish,
      _genesisBlockCommitment: BytesLike,
      _allowList: string,
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      _zkPorterIsAvailable: boolean,
      _l2BootloaderBytecodeHash: BytesLike,
      _l2DefaultAccountBytecodeHash: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    initialize(
      _verifier: string,
      _governor: string,
      _validator: string,
      _genesisBlockHash: BytesLike,
      _genesisIndexRepeatedStorageChanges: BigNumberish,
      _genesisBlockCommitment: BytesLike,
      _allowList: string,
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      _zkPorterIsAvailable: boolean,
      _l2BootloaderBytecodeHash: BytesLike,
      _l2DefaultAccountBytecodeHash: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(address,address,address,bytes32,uint64,bytes32,address,(bytes32,bytes32,bytes32),bool,bytes32,bytes32)"(
      _verifier: string,
      _governor: string,
      _validator: string,
      _genesisBlockHash: BytesLike,
      _genesisIndexRepeatedStorageChanges: BigNumberish,
      _genesisBlockCommitment: BytesLike,
      _allowList: string,
      _verifierParams: {
        recursionNodeLevelVkHash: BytesLike;
        recursionLeafLevelVkHash: BytesLike;
        recursionCircuitsSetVksHash: BytesLike;
      },
      _zkPorterIsAvailable: boolean,
      _l2BootloaderBytecodeHash: BytesLike,
      _l2DefaultAccountBytecodeHash: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
